# HTTP -> HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name techblo.gs www.techblo.gs;
    return 301 https://techblo.gs$request_uri;
}

# HTTPS www.techblo.gs -> techblo.gs redirect
server {
        server_name www.techblo.gs;
        return 301 https://techblo.gs$request_uri;

    listen [::]:443 ssl http2;
    listen 443 ssl http2;
    ssl_certificate /etc/letsencrypt/live/techblo.gs/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/techblo.gs/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
        server_name techblo.gs;

        listen [::]:443 ssl http2;
        listen 443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/techblo.gs/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/techblo.gs/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

        root /srv/techblogs/current/frontend;
        index index.html;

        access_log /var/log/nginx/techblog.access.log;
        error_log  /var/log/nginx/techblog.error.log warn;

        # Strip trailing slashes and redirect
        rewrite ^/(.*)/$ /$1 permanent;

        # API Proxy to backend
        location /api/ {
          proxy_pass http://unix:/run/techblogs-api/techblogs-api.sock:/;
          proxy_http_version 1.1;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Host $host;

          # reasonable timeouts for backend
          proxy_connect_timeout 5s;
          proxy_send_timeout 30s;
          proxy_read_timeout 30s;

          # dont cache API
          add_header Cache-Control "no-store";
        }

        # Serves static file at $uri or $uri/, 404 if not found
        location / {
                try_files $uri $uri/ =404;
        }

        # Sensible static caching
        location ~* \.(?:css|js|jpe?g|png|svg|ico)$ {
                expires 7d;
                add_header Cache-Control "public, max-age=604800, immutable";
                try_files $uri =404;
        }

}
